type Query {
	draft: Draft
	isAlive: Boolean
	isClientRunning: Boolean
	toggleClientRunning: Boolean
	reloadConfiguration: Boolean
}

type Draft {
	blue: Team
	red: Team
}

type Comp {
    name: String
    picks: [CompCharacter]
    banns: [Character]
}

type Team {
	picks: [Character]
	banns: [Character]
	combos: [Character]
	openRoles: [Role]
	comps: [Comp]
}

enum Role {
	TOP
	JUNGLE
	MID
	BOTTOM
	SUPPORT
}

 enum Feature {
	CC
	HARDCC
	ENGAGE
	HARDENGAGE
	POKE
	SPLITPUSH
	WAVECLEAR
	DUELLANT
	ROAM
	SUSTAIN
	ASSASINATION
	TANK
}

type CompCharacter {
    name: String
    alternatives: [Character]
}

type Character {
	name: String
	priorities: [Character]
	features: [Feature]
	priority: Int
}